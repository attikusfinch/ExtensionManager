import { TonConnectButton, useTonAddress, useTonWallet, useTonConnectUI } from '@tonconnect/ui-react';
import { useState, useEffect } from 'react';
import { TonClient } from '@ton/ton';
import { detectWalletVersion, getPluginList } from '../utils/walletDetector';
import { createInstallPluginPayload, createRemovePluginPayload, createPluginTransaction } from '../utils/pluginTransactions';
import { deployPredefinedPlugin } from '../utils/pluginDeploy';
import './MainPage.css';

export const MainPage = () => {
    const userFriendlyAddress = useTonAddress();
    const rawAddress = useTonAddress(false);
    const wallet = useTonWallet();
    const [tonConnectUI] = useTonConnectUI();
    const [pluginList, setPluginList] = useState([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);
    const [walletInfo, setWalletInfo] = useState(null);
    const [newPluginAddress, setNewPluginAddress] = useState('');
    const [showAddPlugin, setShowAddPlugin] = useState(false);
    const [showDeployPlugin, setShowDeployPlugin] = useState(false);
    const [txLoading, setTxLoading] = useState(false);

    useEffect(() => {
        const fetchPluginList = async () => {
            if (!rawAddress) {
                setPluginList([]);
                setError(null);
                return;
            }

            setLoading(true);
            setError(null);

            try {
                console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ:', rawAddress);

                // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è mainnet
                const client = new TonClient({
                    endpoint: 'https://toncenter.com/api/v2/jsonRPC',
                });

                // –î–µ—Ç–µ–∫—Ç–∏—Ä—É–µ–º –≤–µ—Ä—Å–∏—é –∫–æ—à–µ–ª—å–∫–∞
                const walletVersion = await detectWalletVersion(rawAddress, client);
                setWalletInfo(walletVersion);
                console.log('–í–µ—Ä—Å–∏—è –∫–æ—à–µ–ª—å–∫–∞:', walletVersion);

                if (!walletVersion.supportsPlugins) {
                    setError('–≠—Ç–æ—Ç –∫–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–ª–∞–≥–∏–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ—à–µ–ª–µ–∫ v4 —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–ª–∞–≥–∏–Ω–æ–≤.');
                    setPluginList([]);
                    return;
                }

                // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤
                console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤...');
                const plugins = await getPluginList(rawAddress, client);

                setPluginList(plugins);
                console.log('–°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤:', plugins);

                if (plugins.length === 0) {
                    setError(null); // –ù–µ—Ç –æ—à–∏–±–∫–∏, –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç –ø–ª–∞–≥–∏–Ω–æ–≤
                }
            } catch (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤:', err);

                let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤';

                if (err.message.includes('exit_code')) {
                    errorMessage = 'Get-–º–µ—Ç–æ–¥ get_plugin_list –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –Ω–µ v4 –∫–æ—à–µ–ª–µ–∫ —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏.';
                } else if (err.message.includes('network')) {
                    errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
                } else if (err.message) {
                    errorMessage = err.message;
                }

                setError(errorMessage);
                setPluginList([]);
                setWalletInfo({ version: 'unknown', supportsPlugins: false });
            } finally {
                setLoading(false);
            }
        };

        fetchPluginList();
    }, [rawAddress]);

    // –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–∞
    const handleInstallPlugin = async () => {
        if (!newPluginAddress.trim()) {
            alert('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø–ª–∞–≥–∏–Ω–∞');
            return;
        }

        setTxLoading(true);
        try {
            const payload = createInstallPluginPayload(newPluginAddress);
            const transaction = createPluginTransaction(userFriendlyAddress, payload, '0.05');

            await tonConnectUI.sendTransaction(transaction);

            alert('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ü–ª–∞–≥–∏–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
            setNewPluginAddress('');
            setShowAddPlugin(false);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                window.location.reload();
            }, 3000);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–∞:', error);
            alert('–û—à–∏–±–∫–∞: ' + error.message);
        } finally {
            setTxLoading(false);
        }
    };

    // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞
    const handleRemovePlugin = async (pluginAddress) => {
        if (!confirm(`–£–¥–∞–ª–∏—Ç—å –ø–ª–∞–≥–∏–Ω ${pluginAddress}?`)) {
            return;
        }

        setTxLoading(true);
        try {
            const payload = createRemovePluginPayload(pluginAddress);
            const transaction = createPluginTransaction(userFriendlyAddress, payload, '0.01');

            await tonConnectUI.sendTransaction(transaction);

            alert('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ü–ª–∞–≥–∏–Ω –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                window.location.reload();
            }, 3000);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞:', error);
            alert('–û—à–∏–±–∫–∞: ' + error.message);
        } finally {
            setTxLoading(false);
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è –Ω–æ–≤–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞
    const handleDeployPlugin = async () => {
        setTxLoading(true);
        try {
            const { transaction, pluginAddress } = deployPredefinedPlugin(userFriendlyAddress, '0.1');

            console.log('–î–µ–ø–ª–æ–π –ø–ª–∞–≥–∏–Ω–∞ –Ω–∞ –∞–¥—Ä–µ—Å:', pluginAddress);

            await tonConnectUI.sendTransaction(transaction);

            alert(`–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n–ü–ª–∞–≥–∏–Ω –±—É–¥–µ—Ç –∑–∞–¥–µ–ø–ª–æ–µ–Ω –Ω–∞ –∞–¥—Ä–µ—Å:\n${pluginAddress}`);
            setShowDeployPlugin(false);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–¥–µ–ø–ª–æ–π –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏)
            setTimeout(() => {
                window.location.reload();
            }, 5000);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è –ø–ª–∞–≥–∏–Ω–∞:', error);
            alert('–û—à–∏–±–∫–∞: ' + error.message);
        } finally {
            setTxLoading(false);
        }
    };

    return (
        <div className="main-container">
            <div className="header">
                <div className="logo">
                    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="20" cy="20" r="20" fill="url(#gradient)" />
                        <path d="M20 10L30 18V32L20 24L10 32V18L20 10Z" fill="white" />
                        <defs>
                            <linearGradient id="gradient" x1="0" y1="0" x2="40" y2="40" gradientUnits="userSpaceOnUse">
                                <stop stopColor="#0088CC" />
                                <stop offset="1" stopColor="#00C6FF" />
                            </linearGradient>
                        </defs>
                    </svg>
                    <h1>Extension Manager</h1>
                </div>
                <TonConnectButton />
            </div>

            <div className="content">
                {!wallet ? (
                    <div className="welcome-section">
                        <div className="welcome-avatar">
                            <img src="user.jpg" alt="Developer" />
                        </div>
                        <h2>–ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π TON</h2>
                        <p className="subtitle">
                            –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
                        </p>
                        <p className="developer-credit">
                            –°–¥–µ–ª–∞–Ω–æ <a href="https://t.me/fiscaldev" target="_blank" rel="noopener noreferrer">@fiscaldev</a>
                        </p>
                    </div>
                ) : (
                    <div className="wallet-section">
                        <div className="wallet-card">
                            <div className="wallet-header">
                                <div className="wallet-icon">
                                    {wallet.imageUrl ? (
                                        <img src={wallet.imageUrl} alt={wallet.name} />
                                    ) : (
                                        <div className="default-icon">üíº</div>
                                    )}
                                </div>
                                <div className="wallet-info">
                                    <h3>{wallet.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫'}</h3>
                                    <p className="connection-status">
                                        <span className="status-dot"></span>
                                        –ü–æ–¥–∫–ª—é—á–µ–Ω
                                    </p>
                                </div>
                            </div>

                            <div className="address-section">
                                <div className="address-card">
                                    <label>–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</label>
                                    <div className="address-display">
                                        <code>{userFriendlyAddress}</code>
                                        <button
                                            className="copy-button"
                                            onClick={() => {
                                                navigator.clipboard.writeText(userFriendlyAddress);
                                                alert('–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
                                            }}
                                            title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å"
                                        >
                                            üìã
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div className="plugins-section">
                                <div className="section-header">
                                    <h3>üîå –°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤</h3>
                                    <div className="header-actions">
                                        {loading && <div className="loader"></div>}
                                        {walletInfo?.supportsPlugins && !loading && (
                                            <>
                                                <button
                                                    className="deploy-plugin-btn"
                                                    onClick={() => setShowDeployPlugin(true)}
                                                    disabled={txLoading}
                                                >
                                                    üöÄ –î–µ–ø–ª–æ–π
                                                </button>
                                                <button
                                                    className="add-plugin-btn"
                                                    onClick={() => setShowAddPlugin(true)}
                                                    disabled={txLoading}
                                                >
                                                    ‚ûï –î–æ–±–∞–≤–∏—Ç—å
                                                </button>
                                            </>
                                        )}
                                    </div>
                                </div>

                                {walletInfo && (
                                    <div className="wallet-version-info">
                                        <span className="version-badge">
                                            {walletInfo.version}
                                            {walletInfo.supportsPlugins && <span className="plugin-support">‚úì –ü–ª–∞–≥–∏–Ω—ã</span>}
                                        </span>
                                    </div>
                                )}

                                {error && (
                                    <div className="error-message">
                                        <span className="error-icon">‚ö†Ô∏è</span>
                                        <p>{error}</p>
                                    </div>
                                )}

                                {!loading && !error && pluginList.length === 0 && walletInfo?.supportsPlugins && (
                                    <div className="empty-state">
                                        <div className="empty-icon">üì≠</div>
                                        <p>–ü–ª–∞–≥–∏–Ω—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã</p>
                                        <span className="empty-hint">
                                            –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –ø–ª–∞–≥–∏–Ω
                                        </span>
                                    </div>
                                )}

                                {!loading && !error && pluginList.length > 0 && (
                                    <div className="plugins-list">
                                        {pluginList.map((plugin, index) => (
                                            <div key={plugin.id || index} className="plugin-item">
                                                <div className="plugin-icon">üß©</div>
                                                <div className="plugin-info">
                                                    <h4>–ü–ª–∞–≥–∏–Ω #{index + 1}</h4>
                                                    <div className="plugin-details">
                                                        <div className="plugin-field">
                                                            <label>–ê–¥—Ä–µ—Å:</label>
                                                            <code className="plugin-address">{plugin.friendlyAddress}</code>
                                                            <button
                                                                className="copy-btn-small"
                                                                onClick={() => {
                                                                    navigator.clipboard.writeText(plugin.friendlyAddress);
                                                                    alert('–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
                                                                }}
                                                            >
                                                                üìã
                                                            </button>
                                                        </div>
                                                        <div className="plugin-field">
                                                            <label>Workchain:</label>
                                                            <span>{plugin.workchain}</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <button
                                                    className="remove-plugin-btn"
                                                    onClick={() => handleRemovePlugin(plugin.friendlyAddress)}
                                                    disabled={txLoading}
                                                    title="–£–¥–∞–ª–∏—Ç—å –ø–ª–∞–≥–∏–Ω"
                                                >
                                                    üóëÔ∏è
                                                </button>
                                            </div>
                                        ))}
                                    </div>
                                )}

                                {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞ */}
                                {showAddPlugin && (
                                    <div className="modal-overlay" onClick={() => setShowAddPlugin(false)}>
                                        <div className="modal-content" onClick={(e) => e.stopPropagation()}>
                                            <div className="modal-header">
                                                <h3>–î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω</h3>
                                                <button
                                                    className="modal-close"
                                                    onClick={() => setShowAddPlugin(false)}
                                                >
                                                    ‚úï
                                                </button>
                                            </div>
                                            <div className="modal-body">
                                                <label>–ê–¥—Ä–µ—Å –ø–ª–∞–≥–∏–Ω–∞:</label>
                                                <input
                                                    type="text"
                                                    className="plugin-input"
                                                    placeholder="EQD... –∏–ª–∏ 0:..."
                                                    value={newPluginAddress}
                                                    onChange={(e) => setNewPluginAddress(e.target.value)}
                                                    disabled={txLoading}
                                                />
                                                <div className="modal-info">
                                                    <p>üí° –ë—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ~0.05 TON</p>
                                                    <p>‚ÑπÔ∏è –ü–ª–∞–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∂–µ –∑–∞–¥–µ–ø–ª–æ–µ–Ω</p>
                                                </div>
                                            </div>
                                            <div className="modal-footer">
                                                <button
                                                    className="modal-btn cancel"
                                                    onClick={() => setShowAddPlugin(false)}
                                                    disabled={txLoading}
                                                >
                                                    –û—Ç–º–µ–Ω–∞
                                                </button>
                                                <button
                                                    className="modal-btn confirm"
                                                    onClick={handleInstallPlugin}
                                                    disabled={txLoading || !newPluginAddress.trim()}
                                                >
                                                    {txLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'}
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                )}

                                {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–ø–ª–æ—è –ø–ª–∞–≥–∏–Ω–∞ */}
                                {showDeployPlugin && (
                                    <div className="modal-overlay" onClick={() => setShowDeployPlugin(false)}>
                                        <div className="modal-content" onClick={(e) => e.stopPropagation()}>
                                            <div className="modal-header">
                                                <h3>–î–µ–ø–ª–æ–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞</h3>
                                                <button
                                                    className="modal-close"
                                                    onClick={() => setShowDeployPlugin(false)}
                                                >
                                                    ‚úï
                                                </button>
                                            </div>
                                            <div className="modal-body">
                                                <p className="modal-description">
                                                    –ë—É–¥–µ—Ç –∑–∞–¥–µ–ø–ª–æ–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω —Å –∫–æ–¥–æ–º –∫–æ—à–µ–ª—å–∫–∞ v4.
                                                </p>
                                                <div className="modal-info">
                                                    <p>üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–µ–ø–ª–æ—è: ~0.1 TON</p>
                                                    <p>üì¶ Bytecode: –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω</p>
                                                    <p>‚öôÔ∏è –û–ø–µ—Ä–∞—Ü–∏—è: op = 1 (deploy + install)</p>
                                                </div>
                                            </div>
                                            <div className="modal-footer">
                                                <button
                                                    className="modal-btn cancel"
                                                    onClick={() => setShowDeployPlugin(false)}
                                                    disabled={txLoading}
                                                >
                                                    –û—Ç–º–µ–Ω–∞
                                                </button>
                                                <button
                                                    className="modal-btn confirm"
                                                    onClick={handleDeployPlugin}
                                                    disabled={txLoading}
                                                >
                                                    {txLoading ? '–î–µ–ø–ª–æ–π...' : '–î–µ–ø–ª–æ–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'}
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                )}
                            </div>
                        </div>

                        <div className="info-cards">
                            <div className="info-card">
                                <div className="info-icon">üîó</div>
                                <div className="info-content">
                                    <h4>–ü—Ä–æ—Ç–æ–∫–æ–ª</h4>
                                    <p>TON Connect 2.0</p>
                                </div>
                            </div>
                            <div className="info-card">
                                <div className="info-icon">üì¶</div>
                                <div className="info-content">
                                    <h4>–ü–ª–∞–≥–∏–Ω–æ–≤</h4>
                                    <p>{loading ? '...' : pluginList.length}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                )}
            </div>

            <footer className="footer">
                <p>Powered by TON Connect ‚Ä¢ React Application</p>
            </footer>
        </div>
    );
};

