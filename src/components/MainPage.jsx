import { TonConnectButton, useTonAddress, useTonWallet } from '@tonconnect/ui-react';
import { useState, useEffect } from 'react';
import { TonClient, Address } from '@ton/ton';
import { parsePluginListAsCell } from '../utils/parsePluginList';
import './MainPage.css';

export const MainPage = () => {
    const userFriendlyAddress = useTonAddress();
    const rawAddress = useTonAddress(false);
    const wallet = useTonWallet();
    const [pluginList, setPluginList] = useState([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchPluginList = async () => {
            if (!rawAddress) {
                setPluginList([]);
                setError(null);
                return;
            }

            setLoading(true);
            setError(null);

            try {
                console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ –¥–ª—è –∞–¥—Ä–µ—Å–∞:', rawAddress);

                // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è mainnet
                const client = new TonClient({
                    endpoint: 'https://toncenter.com/api/v2/jsonRPC',
                    // API –∫–ª—é—á –æ–ø—Ü–∏–æ–Ω–∞–ª–µ–Ω, –Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
                    // –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ https://toncenter.com
                });

                // –ü–∞—Ä—Å–∏–º –∞–¥—Ä–µ—Å
                const address = Address.parse(rawAddress);

                // –í—ã–∑—ã–≤–∞–µ–º get-–º–µ—Ç–æ–¥ get_plugin_list
                console.log('–í—ã–∑–æ–≤ get-–º–µ—Ç–æ–¥–∞ get_plugin_list...');
                const result = await client.runMethod(address, 'get_plugin_list');

                console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç get-–º–µ—Ç–æ–¥–∞:', result);

                // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø–æ–ª—å–∑—É—è —É—Ç–∏–ª–∏—Ç—É
                // –ò–∑–º–µ–Ω–∏—Ç–µ parsePluginListAsCell –Ω–∞ –Ω—É–∂–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –∏–∑ src/utils/parsePluginList.js
                const plugins = parsePluginListAsCell(result.stack);

                setPluginList(plugins);
                console.log('–†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã:', plugins);

                if (plugins.length === 0) {
                    setError('Get-–º–µ—Ç–æ–¥ –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –ø–ª–∞–≥–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥—Ä—É–≥–æ–π –ø–∞—Ä—Å–µ—Ä.');
                }
            } catch (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤:', err);

                let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤';

                if (err.message.includes('exit_code')) {
                    errorMessage = 'Get-–º–µ—Ç–æ–¥ get_plugin_list –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ';
                } else if (err.message.includes('network')) {
                    errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
                } else if (err.message) {
                    errorMessage = err.message;
                }

                setError(errorMessage);
                setPluginList([]);
            } finally {
                setLoading(false);
            }
        };

        fetchPluginList();
    }, [rawAddress]);

    return (
        <div className="main-container">
            <div className="header">
                <div className="logo">
                    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="20" cy="20" r="20" fill="url(#gradient)" />
                        <path d="M20 10L30 18V32L20 24L10 32V18L20 10Z" fill="white" />
                        <defs>
                            <linearGradient id="gradient" x1="0" y1="0" x2="40" y2="40" gradientUnits="userSpaceOnUse">
                                <stop stopColor="#0088CC" />
                                <stop offset="1" stopColor="#00C6FF" />
                            </linearGradient>
                        </defs>
                    </svg>
                    <h1>Extension Manager</h1>
                </div>
                <TonConnectButton />
            </div>

            <div className="content">
                {!wallet ? (
                    <div className="welcome-section">
                        <div className="welcome-icon">
                            <svg width="120" height="120" viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="60" cy="60" r="60" fill="url(#welcomeGradient)" fillOpacity="0.1" />
                                <circle cx="60" cy="60" r="50" fill="url(#welcomeGradient)" fillOpacity="0.2" />
                                <path d="M60 30L80 45V75L60 60L40 75V45L60 30Z" fill="url(#welcomeGradient)" />
                                <defs>
                                    <linearGradient id="welcomeGradient" x1="0" y1="0" x2="120" y2="120" gradientUnits="userSpaceOnUse">
                                        <stop stopColor="#0088CC" />
                                        <stop offset="1" stopColor="#00C6FF" />
                                    </linearGradient>
                                </defs>
                            </svg>
                        </div>
                        <h2>–ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π TON</h2>
                        <p className="subtitle">
                            –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
                        </p>
                        <div className="features">
                            <div className="feature-card">
                                <div className="feature-icon">üîå</div>
                                <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞–º–∏</h3>
                                <p>–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π</p>
                            </div>
                            <div className="feature-card">
                                <div className="feature-icon">‚ö°</div>
                                <h3>Get-–º–µ—Ç–æ–¥—ã</h3>
                                <p>–ü—Ä—è–º–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–æ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏</p>
                            </div>
                            <div className="feature-card">
                                <div className="feature-icon">üîê</div>
                                <h3>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                                <p>–ó–∞—â–∏—â–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ TON Connect</p>
                            </div>
                        </div>
                    </div>
                ) : (
                    <div className="wallet-section">
                        <div className="wallet-card">
                            <div className="wallet-header">
                                <div className="wallet-icon">
                                    {wallet.imageUrl ? (
                                        <img src={wallet.imageUrl} alt={wallet.name} />
                                    ) : (
                                        <div className="default-icon">üíº</div>
                                    )}
                                </div>
                                <div className="wallet-info">
                                    <h3>{wallet.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫'}</h3>
                                    <p className="connection-status">
                                        <span className="status-dot"></span>
                                        –ü–æ–¥–∫–ª—é—á–µ–Ω
                                    </p>
                                </div>
                            </div>

                            <div className="address-section">
                                <div className="address-card">
                                    <label>–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</label>
                                    <div className="address-display">
                                        <code>{userFriendlyAddress}</code>
                                        <button
                                            className="copy-button"
                                            onClick={() => {
                                                navigator.clipboard.writeText(userFriendlyAddress);
                                                alert('–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
                                            }}
                                            title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å"
                                        >
                                            üìã
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div className="plugins-section">
                                <div className="section-header">
                                    <h3>üîå –°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤</h3>
                                    {loading && <div className="loader"></div>}
                                </div>

                                {error && (
                                    <div className="error-message">
                                        <span className="error-icon">‚ö†Ô∏è</span>
                                        <p>{error}</p>
                                    </div>
                                )}

                                {!loading && !error && pluginList.length === 0 && (
                                    <div className="empty-state">
                                        <div className="empty-icon">üì≠</div>
                                        <p>–ü–ª–∞–≥–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                                        <span className="empty-hint">
                                            –≠—Ç–æ—Ç –∞–¥—Ä–µ—Å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–ª–∞–≥–∏–Ω–æ–≤ –∏–ª–∏ get-–º–µ—Ç–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                                        </span>
                                    </div>
                                )}

                                {!loading && !error && pluginList.length > 0 && (
                                    <div className="plugins-list">
                                        {pluginList.map((plugin, index) => (
                                            <div key={plugin.id || index} className="plugin-item">
                                                <div className="plugin-icon">üß©</div>
                                                <div className="plugin-info">
                                                    <h4>–ü–ª–∞–≥–∏–Ω #{index + 1}</h4>
                                                    <code className="plugin-data">{plugin.data}</code>
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                )}
                            </div>
                        </div>

                        <div className="info-cards">
                            <div className="info-card">
                                <div className="info-icon">üîó</div>
                                <div className="info-content">
                                    <h4>–ü—Ä–æ—Ç–æ–∫–æ–ª</h4>
                                    <p>TON Connect 2.0</p>
                                </div>
                            </div>
                            <div className="info-card">
                                <div className="info-icon">üì¶</div>
                                <div className="info-content">
                                    <h4>–ü–ª–∞–≥–∏–Ω–æ–≤</h4>
                                    <p>{loading ? '...' : pluginList.length}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                )}
            </div>

            <footer className="footer">
                <p>Powered by TON Connect ‚Ä¢ React Application</p>
            </footer>
        </div>
    );
};

